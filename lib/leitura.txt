
//DA FORMA A BAIXO...
//FOI POSSIVEL USAR 2 IFS dessa forma... Podemos FILTRAR 2 dados ao mesmo
//tempo... Em containers DIFERENTES... Tipo
//Em uns container vai exiber apenas SE FUNCIONARIO for ATIVO... e em OUTRO CONTAINER
//apenas se FUNCIONARIO for do TI

import 'package:flutter/material.dart';
// Import the firebase_core and cloud_firestore plugin
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'main.dart';

class Lerusuario extends StatelessWidget {
  String Teste = 'dsd';

  @override
  Widget build(BuildContext context) {
    CollectionReference users = FirebaseFirestore.instance.collection('users');

    return FutureBuilder<QuerySnapshot>(
      future: users.get(),
      builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {
        if (snapshot.hasError) {
          return Text('Something went wrong');
        }

        if (snapshot.connectionState == ConnectionState.waiting) {
          return Text("Loading");
        }

        return Column(
          children: snapshot.data!.docs.map((DocumentSnapshot document) {
            Map<String, dynamic> data =
                document.data()! as Map<String, dynamic>;

            if (data['full_name'] == 'amanda') {
              return Container(
                height: 200,
                width: 300,
                color: Colors.blue,
                child:
                    Text("Full Name: ${data['full_name']} ${data['company']}"),
                //child: Text(data["full_name"]),
              );
            }
            if (data['company'] == 'appbox') {
              return Container(
                height: 200,
                width: 300,
                color: Colors.green,
                child:
                    Text("Full Name: ${data['full_name']} ${data['company']}"),
              );
            } else {
              return Container();
            }
          }).toList(),
        );
      },
    );
  }
}





//
//
// BUSCANDO PELO NOME DANIEL UTILIZANDO O COMANDO WHERE
//
import 'package:flutter/material.dart';
// Import the firebase_core and cloud_firestore plugin
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'main.dart';

class Lerusuario extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    CollectionReference users = FirebaseFirestore.instance.collection('users');

    return FutureBuilder<QuerySnapshot>(
      future: users.where('full_name', isEqualTo: 'daniel').get(),
      builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {
        if (snapshot.hasError) {
          return Text('Something went wrong');
        }

        if (snapshot.connectionState == ConnectionState.waiting) {
          return Text("Loading");
        }

        return ListView(
          children: snapshot.data!.docs.map((DocumentSnapshot document) {
            Map<String, dynamic> data =
                document.data()! as Map<String, dynamic>;

            return Material(
              child: ListTile(
                title: Text(data['full_name']),

                subtitle: Text(data['company']),
                //
                //tambem podemos fazer com um CONTAINER no lugar de LISTTILE
                //return Container(
                //child: Text(data['full_name']),
                //);
                //
              ),
            );
          }).toList(),
        );
      },
    );
  }
}



//
//
//DA FORMA A BAIXO EXIBE SOMENTE OS Q TEM O NOME AMANDA...
//ATRAVES DE IF E ELSE

import 'package:flutter/material.dart';
// Import the firebase_core and cloud_firestore plugin
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'main.dart';

class Lerusuario extends StatelessWidget {
  String Teste = 'dsd';

  @override
  Widget build(BuildContext context) {
    CollectionReference users = FirebaseFirestore.instance.collection('users');

    return FutureBuilder<QuerySnapshot>(
      future: users.get(),
      builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {
        if (snapshot.hasError) {
          return Text('Something went wrong');
        }

        if (snapshot.connectionState == ConnectionState.waiting) {
          return Text("Loading");
        }

        return Column(
          children: snapshot.data!.docs.map((DocumentSnapshot document) {
            Map<String, dynamic> data =
                document.data()! as Map<String, dynamic>;

            if (data['full_name'] == 'amanda') {
              return Container(
                height: 200,
                width: 300,
                color: Colors.blue,
                child:
                    Text("Full Name: ${data['full_name']} ${data['company']}"),
                //child: Text(data["full_name"]),
              );
            } else {
              return Container();
            }
          }).toList(),
        );
      },
    );
  }
}





###########################

// A BAIXO E O ORIGINAL... OU SEJA... MOSTRA TODOS OS NOMES CADASTRADOS
//
import 'package:flutter/material.dart';
// Import the firebase_core and cloud_firestore plugin
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'main.dart';

class Lerusuario extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    CollectionReference users = FirebaseFirestore.instance.collection('users');

    return FutureBuilder<QuerySnapshot>(
      future: users.get(),
      builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {
        if (snapshot.hasError) {
          return Text('Something went wrong');
        }

        if (snapshot.connectionState == ConnectionState.waiting) {
          return Text("Loading");
        }

        return ListView(
          children: snapshot.data!.docs.map((DocumentSnapshot document) {
            Map<String, dynamic> data =
                document.data()! as Map<String, dynamic>;

            return Material(
              child: ListTile(
                title: Text(data['full_name']),

                subtitle: Text(data['company']),
                //
                //tambem podemos fazer com um CONTAINER no lugar de LISTTILE
                //return Container(
                //child: Text(data['full_name']),
                //);
                //
              ),
            );
          }).toList(),
        );
      },
    );
  }
}
